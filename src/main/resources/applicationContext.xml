<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--Spring 入门配置-->
    <bean id="userService" class="com.hxzy.spring.demo01.UserServiceImpl"></bean>

    <!--
        bean的声明周期
        scope的取值范围：
            singleton：默认值，单例模式创建对象
            prototype：多例创建对象，每次getBean()都创建一个新的对象
            request:适用于web项目，将创建的对象存放到request作用域
            session：适用于web项目，将创建的对象存放到session作用域
            globalSession:在具有多个子项目的工程中，将对象存放到一个共享的内存，
                            方便在多个子项目中共同使用
    -->
    <bean id="customerService" class="com.hxzy.spring.demo02.CustomerDaoImpl" scope="prototype" init-method="setUp" destroy-method="destroy"/>
    <!--通过构造函数注入属性值-->
    <bean id="car" class="com.hxzy.spring.demo03.Car" >
        <constructor-arg name="name" value="宝马" />
        <constructor-arg name="price" value="800000"/>
    </bean>

    <!--通过setter注入属性值-->
    <bean id="food" class="com.hxzy.spring.demo03.Food" >
        <property name="name" value="奔驰" />
        <property name="price" value="1000000"/>
    </bean>

    <!--通过set方法为对象类型的属性注入值-->
    <bean id="employee" class="com.hxzy.spring.demo03.Employee" >
        <property name="name" value="张三"/>
        <property name="car" ref="car"/>
    </bean>

    <!--通过p名称空间的方式为普通属性注入值-->
    <bean id="car2" class="com.hxzy.spring.demo03.Car"
          p:name="保时捷"
          p:price="1000000" />

    <!--通过p名称空间的方式为对象属性注入值-->
    <bean id="emp2" class="com.hxzy.spring.demo03.Employee"
          p:name="王五"
          p:car-ref="car2" />
    <bean id="collectionBean" class="com.hxzy.spring.demo03.CollectionBean">
        <!--为数组注入属性-->
        <property name="arr">
            <list>
                <value>str1</value>
                <value>str2</value>
                <value>str3</value>
                <value>str4</value>
                <value>str5</value>
            </list>
        </property>
        <!--为list集合注入属性-->
        <property name="list">
            <list>
                <!--ref指向另一个bean-->
                <ref bean="car"/>
                <ref bean="car2"/>
            </list>
        </property>
        <property name="set">
            <set>
                <value>set1</value>
                <value>set2</value>
            </set>
        </property>
        <property name="map">
            <map>
                <entry key="map1" value-ref="car" />
                <entry key="map2" value-ref="car2" />
            </map>
        </property>
    </bean>
</beans>